services:
  db:
    image: mysql:8.1.0 # mysql 8.1.0 버전 이미지를 사용
    environment:
      - MYSQL_HOST=${DATABASE_HOST}
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_USER=${DATABASE_USER}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TZ}
    volumes:
      - ./db/conf:/etc/mysql/conf.d/:ro # 설정 파일을 읽기 전용으로 마운트
      - mysqldata:/var/lib/mysql # 데이터 볼륨 마운트
      - ./db/logs:/var/log/mysql # 로그 볼륨 마운트
    ports:
      - '3307:3306'
    networks:
      - app-network

  backend:
    image: node:20-buster # node 20 버전 이미지를 사용
    ports:
      - '3001:3000'
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=3306
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - TZ=${TZ}
      - CHOKIDAR_USEPOLLING=true
    tty: true
    volumes:
      - ./project_nest-deployment-repo:/app # 백엔드 코드가 있는 디렉토리를 마운트
    working_dir: /app
    command: > # 마이그레이션 실행 후 개발 서버 시작
      bash -c "npm install && npm run start:dev"
    networks:
      - app-network
    depends_on:
      - db

  frontend:
    image: node:20-buster
    ports:
      - '5173:5173'
    environment:
      - CHOKIDAR_USEPOLLING=true
    tty: true
    volumes:
      - ./project_react-deployment-repo:/app # 프론트엔드 코드가 있는 디렉토리를 마운트
    working_dir: /app
    command: >
      bash -c "npm install && npm run dev"
    networks:
      - app-network

networks:
  app-network:

volumes:
  mysqldata: # mysql 데이터 볼륨
